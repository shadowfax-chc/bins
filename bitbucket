#!/usr/bin/env python
'''
Interact with bitbucket API
'''
import os
import json
import argparse
import yaml
import requests
import getpass


CREATE_URL = 'https://api.bitbucket.org/2.0/repositories/{owner}/{repo_slug}'

def get_config():
    '''
    Get variables from config
    '''
    config_file = os.path.expanduser('~/.bb.yaml')
    with open(config_file, 'r') as f:
        return yaml.safe_load(f)


def create_repo(repo_slug,
                user,
                owner=None,
                data=None):
    '''
    Create the repo.
    '''
    password = getpass.getpass()
    if not owner:
        owner = user

    if not data:
        data = {
            'scm': 'git',
            'is_private': 'true',
            'fork_policy': 'no_public_forks',
        }
    print 'Creating repo {}/{}'.format(owner, repo_slug)
    print 'Using params: {}'.format(json.dumps(data))
    res = requests.post(CREATE_URL.format(owner=owner,
                                          repo_slug=repo_slug),
                        data=json.dumps(data),
                        auth=(user, password))



def main():
    '''
    Process args and execute
    '''
    parser = argparse.ArgumentParser()
    parser.add_argument('repo', help='name of repo to create')
    args = parser.parse_args()
    config = get_config()
    create_repo(args.repo, config.get('user'))


if __name__ == '__main__':
    main()
